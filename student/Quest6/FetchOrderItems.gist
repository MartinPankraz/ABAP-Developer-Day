name: Fetch Order Items details from SAP
description: >-
  This snippet connects via a Logic Apps to an S/4HANA System and fetches
  information for a specific Order Item
host: WORD
api_set: {}
script:
  content: |
    $("#run").click(() => tryCatch(run));

    async function run() {
      await Word.run(async (context) => {
        const body = context.document.body;

        // Look for the selected text in the document
        const range = context.document.getSelection();
        range.load("text");
        await context.sync();
        const orderID = range.text;
        console.log(`- The selected text was ${orderID}.`);

        // Call the Online Shop URL to retrieve a specific OrderID
        const url =
          "https://prod-55.northeurope.logic.azure.com:443/workflows/552774e6b44d444cb08719a4af33fcaf/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=Y_rmgpN3Kloxfef8HP-ixazwnulL7Yh_gZG4FH_NjB8";

        console.log("- Set Header");
        const myHeaders = new Headers();
        myHeaders.append("Content-Type", "application/json");

        const myInit = {
          method: "POST",
          headers: myHeaders,
          body: JSON.stringify({ OID: orderID })
        };

        console.log(`- Sent Request to: ${url}`);
        const myRequest = new Request(url, myInit);

        console.log("- Response");
        const response = await fetch(myRequest);

        console.log("- checkResponse");
        //Expect that status code is in 200-299 range
        if (!response.ok) {
          throw new Error(response.statusText);
        }

        const jsonResponse = await response.json();
        console.log("- REST call successful!");
        console.log(jsonResponse);

        console.log("- Insert Results in Document");
        range.insertText(
          jsonResponse.OrderID +
          "\n Ordered Item: " +
          jsonResponse.OrderedItem +
          "\n Quantity: " +
          jsonResponse.Quantity +
          "\n Description: " +
          jsonResponse.Description +
          "\n PR Status: " +
          jsonResponse.PRStatus +
          "\n PR Number: " +
          jsonResponse.PRNumber,
          "Replace"
        );
        
      });
    }

    /** Default helper for invoking an action and handling errors. */
    async function tryCatch(callback) {
      try {
        await callback();
      } catch (error) {
        // Note: In a production add-in, you'd want to notify the user through your add-in's UI.
        console.error(error);
      }
    }
  language: typescript
template:
  content: >
    Please select an Order Item number and press the buttont fetch data from
    your SAP System:

    <button id="run" class="ms-Button">
      
        <span class="ms-Button-label">Run</span>
    </button>
  language: html
style:
  content: |-
    section.samples {
        margin-top: 20px;
    }

    section.samples .ms-Button, section.setup .ms-Button {
        display: block;
        margin-bottom: 5px;
        margin-left: 20px;
        min-width: 80px;
    }
  language: css
libraries: |
  https://appsforoffice.microsoft.com/lib/1/hosted/office.js
  @types/office-js

  office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
  office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

  core-js@2.4.1/client/core.min.js
  @types/core-js

  jquery@3.1.1
  @types/jquery@3.3.1
